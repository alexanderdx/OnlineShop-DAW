
<div class="row" style="margin: 60px 30px;">
    <div class="col-5"><a href="/products/show/@Model.ProductId"><img class="img-fluid" src="~/Content/img/image.jpg" style="border-radius: 0.25rem;"></a></div>
    <div class="col d-flex flex-column justify-content-between">
        <div class="row">
            <div class="col">
                <h3 class="d-flex flex-row align-items-center" style="font-weight: bold;">
                    <a href="/products/show/@Model.ProductId">@Model.Name</a>
                    @if (DateTime.UtcNow.Subtract(Model.CreatedAt).TotalDays < 10)
                    {
                        <span class="badge badge-primary" style="margin-left: 8px;font-size: large;">New</span>
                    }
                    @if (Model.Stock <= 10)
                    {
                        <span class="badge badge-warning" style="margin-left: 8px;font-size: large;">Limited Stock</span>
                    }
                </h3>
            </div>
            <div class="col-auto align-self-center" style="padding-top: 0.25rem;">
                @if (Model.DiscountedPrice != null)
                {
                    <h4 class="text-danger" style="font-weight: bold;">@Model.DiscountedPrice RON</h4>
                    <p class="text-muted"><s>@Model.Price RON</s></p>
                }
                else
                {
                    <h4 class="text-danger" style="font-weight: bold;">@Model.Price RON</h4>
                }
            </div>
        </div>
        <div class="row">
            <div class="col-8">
                <p>@Model.Description<br></p>
            </div>
        </div>
        <div class="row">
            <div class="col-auto">
                <div style="margin-bottom: 0.5rem;">
                    <label class="text-muted" for="quantity-input" style="margin-right: .5rem;margin-bottom: 0;">Quantity: @Model.Stock</label>
                </div>

                <p class="text-muted text-capitalize">
                    Current status: @{
                        switch ((int)Model.Status)
                        {
                            case 0:
                                <span class="text-info">@Model.Status</span>
                                break;
                            case 1:
                                <span class="text-danger">@Model.Status</span>
                                break;
                            case 2:
                                <span style="color:#00bc8c">@Model.Status</span>
                                break;
                        }
                    }
                </p>
                <a class="btn btn-primary accept-btn" href="/pending/accept/@Model.ProductId">
                    Accept
                </a>
                <a class="btn btn-primary reject-btn" href="/pending/reject/@Model.ProductId" style="margin-left: 0.5rem;">
                    Reject
                </a>
                <a class="btn btn-primary postpone-btn" href="/pending/postpone/@Model.ProductId" style="margin-left: 0.5rem;">
                    Postpone
                </a>

                <br /> <br/>
                <span class="text-muted">
                    Submitted: @{
                        var elapsed = DateTime.UtcNow.Subtract(Model.CreatedAt);
                        if (elapsed.TotalMinutes < 60)
                        { @elapsed.Minutes <text> mins ago </text> }
                        else if (elapsed.TotalHours < 24)
                        { @elapsed.Hours <text>hours ago</text> }
                        else if (elapsed.TotalDays > 1)
                        { @elapsed.Days <text>days ago</text> }
                 }
                </span>
            </div>
        </div>
    </div>
</div>